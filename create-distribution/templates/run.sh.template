#!/bin/bash

# Exit on error, undefined variables
set -eu

# Get the directory where the script is located
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
BUNDLE_DIR="$SCRIPT_DIR"
APP_JAR="$BUNDLE_DIR/app/dbscriptrunner-1.0-SNAPSHOT.jar"
LOG_CONFIG="$BUNDLE_DIR/log4j2.xml"
DRIVERS_DIR="$BUNDLE_DIR/drivers"

# Default values
DB_TYPE="oracle"
DB_HOST="localhost"
DB_PORT="1521"
DB_USER="hr"
DB_PASS="hr"
DB_NAME="freepdb1"
STOP_ON_ERROR="true"
AUTO_COMMIT="false"
PRINT_STATEMENTS="false"
IS_FUNCTION="false"
RETURN_TYPE="NUMERIC"
DRIVER_PATH=""
CSV_OUTPUT=""
SCRIPT_FILE=""

# Function to show usage
usage() {
    echo "Usage: $0 [options] <script_file|procedure>"
    echo "Run with --help for all available options."
    exit 1
}

# Parse command line arguments
while [[ $# -gt 0 ]]; do
    case "$1" in
        -t|--type)
            DB_TYPE="$2"
            shift 2
            ;;
        -H|--host)
            DB_HOST="$2"
            shift 2
            ;;
        -P|--port)
            DB_PORT="$2"
            shift 2
            ;;
        -u|--username)
            DB_USER="$2"
            shift 2
            ;;
        -p|--password)
            DB_PASS="$2"
            shift 2
            ;;
        -d|--database)
            DB_NAME="$2"
            shift 2
            ;;
        --stop-on-error)
            STOP_ON_ERROR="$2"
            shift 2
            ;;
        --auto-commit)
            AUTO_COMMIT="$2"
            shift 2
            ;;
        --print-statements)
            PRINT_STATEMENTS="$2"
            shift 2
            ;;
        --function)
            IS_FUNCTION="true"
            shift
            ;;
        --return-type)
            RETURN_TYPE="$2"
            shift 2
            ;;
        -i|--input)
            INPUT_PARAMS="$2"
            shift 2
            ;;
        -o|--output)
            OUTPUT_PARAMS="$2"
            shift 2
            ;;
        --io)
            IO_PARAMS="$2"
            shift 2
            ;;
        --driver-path)
            DRIVER_PATH="$2"
            shift 2
            ;;
        --csv-output)
            CSV_OUTPUT="$2"
            shift 2
            ;;
        --pre-flight)
            PRE_FLIGHT="true"
            shift
            ;;
        --validate-script)
            VALIDATE_SCRIPT="true"
            shift
            ;;
        --transactional)
            TRANSACTIONAL="true"
            shift
            ;;
        -h|--help)
            usage
            ;;
        --)
            shift
            break
            ;;
        -*)
            echo "Error: Unknown option $1" >&2
            usage
            ;;
        *)
            SCRIPT_FILE="$1"
            shift
            break
            ;;
    esac
done

# Check if script file is provided
if [ -z "$SCRIPT_FILE" ]; then
    echo "Error: SQL script file or stored procedure name is required" >&2
    usage
fi

# Find a default driver jar if not provided
DEFAULT_DRIVER_JAR=$(find "$DRIVERS_DIR" -name '*.jar' | head -n 1)

# Check if --driver-path is present in args
DRIVER_PATH_PRESENT=false
for arg in "$@"; do
    if [[ "$arg" == "--driver-path" ]]; then
        DRIVER_PATH_PRESENT=true
        break
    fi
done

JAVA_OPTS="-Dlog4j.configurationFile=$LOG_CONFIG"

# If --driver-path is not present and a default exists, add it
if [ "$DRIVER_PATH_PRESENT" = false ] && [ -n "$DEFAULT_DRIVER_JAR" ]; then
    exec java $JAVA_OPTS -jar "$APP_JAR" "$@" --driver-path "$DEFAULT_DRIVER_JAR"
else
    exec java $JAVA_OPTS -jar "$APP_JAR" "$@"
fi 