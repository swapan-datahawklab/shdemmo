#!/bin/bash

# Exit on error, undefined variables
set -eu

# Get the directory where the script is located
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Default values
DB_TYPE="oracle"
DB_HOST="localhost"
DB_PORT="1521"
DB_USER="hr"
DB_PASS="hr"
DB_NAME="freepdb1"
STOP_ON_ERROR="true"
AUTO_COMMIT="false"
PRINT_STATEMENTS="false"
IS_FUNCTION="false"
RETURN_TYPE="NUMERIC"
DRIVER_PATH=""
CSV_OUTPUT=""
SCRIPT_FILE=""

# Function to show usage
usage() {
    echo "Usage: $0 [database options] <script_file>"
    echo "Database options:"
    echo "  -t, --type <type>        Database type (oracle, sqlserver, postgresql, mysql)"
    echo "  -H, --host <host>        Database host"
    echo "  -P, --port <port>        Database port"
    echo "  -u, --username <user>    Database username"
    echo "  -p, --password <pass>    Database password"
    echo "  -d, --database <db>      Database name"
    echo "  --stop-on-error <bool>   Stop execution on error (default: true)"
    echo "  --auto-commit <bool>     Auto-commit mode (default: false)"
    echo "  --print-statements <bool> Print SQL statements (default: false)"
    echo "  --function              Execute as function"
    echo "  --return-type <type>    Return type for functions (default: NUMERIC)"
    echo "  -i, --input <params>    Input parameters (name:type:value,...)"
    echo "  -o, --output <params>   Output parameters (name:type,...)"
    echo "  --io <params>           Input/Output parameters (name:type:value,...)"
    echo "  --driver-path <path>    Path to JDBC driver JAR file"
    echo "  --csv-output <file>     Output file for CSV format"
    exit 1
}

# Parse command line arguments
while [[ $# -gt 0 ]]; do
    case "$1" in
        -t|--type)
            DB_TYPE="$2"
            shift 2
            ;;
        -H|--host)
            DB_HOST="$2"
            shift 2
            ;;
        -P|--port)
            DB_PORT="$2"
            shift 2
            ;;
        -u|--username)
            DB_USER="$2"
            shift 2
            ;;
        -p|--password)
            DB_PASS="$2"
            shift 2
            ;;
        -d|--database)
            DB_NAME="$2"
            shift 2
            ;;
        --stop-on-error)
            STOP_ON_ERROR="$2"
            shift 2
            ;;
        --auto-commit)
            AUTO_COMMIT="$2"
            shift 2
            ;;
        --print-statements)
            PRINT_STATEMENTS="$2"
            shift 2
            ;;
        --function)
            IS_FUNCTION="true"
            shift
            ;;
        --return-type)
            RETURN_TYPE="$2"
            shift 2
            ;;
        -i|--input)
            INPUT_PARAMS="$2"
            shift 2
            ;;
        -o|--output)
            OUTPUT_PARAMS="$2"
            shift 2
            ;;
        --io)
            IO_PARAMS="$2"
            shift 2
            ;;
        --driver-path)
            DRIVER_PATH="$2"
            shift 2
            ;;
        --csv-output)
            CSV_OUTPUT="$2"
            shift 2
            ;;
        --)
            shift
            break
            ;;
        -*)
            echo "Error: Unknown option $1" >&2
            usage
            ;;
        *)
            SCRIPT_FILE="$1"
            shift
            break
            ;;
    esac
done

# Check if script file is provided
if [ -z "$SCRIPT_FILE" ]; then
    echo "Error: SQL script file or stored procedure name is required" >&2
    usage
fi

# Build the command
CMD=("$SCRIPT_DIR/runtime/bin/java")
CMD+=("-cp" "$SCRIPT_DIR/app/ojdbc11.jar:$SCRIPT_DIR/app/shdemmo-1.0-SNAPSHOT.jar")
CMD+=("-Djava.util.logging.config.file=/dev/null")
CMD+=("-Dlogback.configurationFile=/dev/null")
CMD+=("-Doracle.jdbc.Trace=false")
CMD+=("-jar" "$SCRIPT_DIR/app/shdemmo-1.0-SNAPSHOT.jar")
CMD+=("-t" "$DB_TYPE")
CMD+=("-H" "$DB_HOST")
CMD+=("-P" "$DB_PORT")
CMD+=("-u" "$DB_USER")
CMD+=("-p" "$DB_PASS")

# Handle Oracle connection string format
if [ "$DB_TYPE" = "oracle" ]; then
    CMD+=("-d" "jdbc:oracle:thin:@$DB_HOST:$DB_PORT/$DB_NAME")
else
    CMD+=("-d" "$DB_NAME")
fi

CMD+=("--stop-on-error" "$STOP_ON_ERROR")
CMD+=("--auto-commit" "$AUTO_COMMIT")
CMD+=("--print-statements" "$PRINT_STATEMENTS")

# Add optional parameters if provided
if [ "$IS_FUNCTION" = "true" ]; then
    CMD+=("--function")
fi

if [ -n "$RETURN_TYPE" ]; then
    CMD+=("--return-type" "$RETURN_TYPE")
fi

if [ -n "$INPUT_PARAMS" ]; then
    CMD+=("-i" "$INPUT_PARAMS")
fi

if [ -n "$OUTPUT_PARAMS" ]; then
    CMD+=("-o" "$OUTPUT_PARAMS")
fi

if [ -n "$IO_PARAMS" ]; then
    CMD+=("--io" "$IO_PARAMS")
fi

if [ -n "$DRIVER_PATH" ]; then
    CMD+=("--driver-path" "$DRIVER_PATH")
fi

if [ -n "$CSV_OUTPUT" ]; then
    CMD+=("--csv-output" "$CSV_OUTPUT")
fi

# Add the script file or stored procedure name
CMD+=("$SCRIPT_FILE")

# Execute the command
exec "${CMD[@]}" 