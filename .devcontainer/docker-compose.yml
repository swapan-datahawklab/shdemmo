version: '${COMPOSE_VERSION}'

volumes:
  postgres-data:
  oracle-data:

services:
  app:
    container_name: javadev
    build: 
      context: .
      dockerfile: docker/java/Dockerfile
    environment:
      # NOTE: POSTGRES_DB/USER/PASSWORD should match values in db container
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOSTNAME: postgresdb

    volumes:
      - ../..:/workspaces:cached
      
    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    network_mode: service:db

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  db:
    container_name: postgresdb
    image: postgres:${POSTGRES_VERSION}
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/postgres/init-scripts:/docker-entrypoint-initdb.d
    environment:
      # NOTE: POSTGRES_DB/USER/PASSWORD should match values in app container
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}

    # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  # Use this section for building from gvenzl image
  oracle:
    container_name: oracledb
    build:
      context: ./docker/oracledb     # Fixed path
      dockerfile: Dockerfile
      args:
        - ORACLE_FREE_TAG=${ORACLE_VERSION}
    environment:
      - ORACLE_PASSWORD=${ORACLE_SYSTEM_PASSWORD}
      - APP_USER=HR
      - APP_USER_PASSWORD=${ORACLE_HR_PASSWORD}
    volumes:
      - oracle-data:/opt/oracle/oradata
      # Mount SQL scripts for development if needed
      - ./docker/oracledb/init-scripts:/container-entrypoint-initdb.d
    ports:
      - "${ORACLE_PORT}:${ORACLE_PORT}"
    healthcheck:
      test: ["CMD", "healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 5s

  # Use this section for pre-built image with data
  # oracle:
  #   container_name: oracledb
  #   image: ghcr.io/swapan-datahawklab/shdemmo/oracledb:latest
  #   environment:
  #     - ORACLE_PASSWORD=${ORACLE_SYSTEM_PASSWORD}
  #     - APP_USER=HR
  #     - APP_USER_PASSWORD=${ORACLE_HR_PASSWORD}
  #     - ORACLE_SID=FREE
  #     - ORACLE_PDB=FREEPDB1
  #     - ORACLE_EDITION=free
  #     - INIT_SGA_SIZE=1536
  #     - INIT_PGA_SIZE=512
  #   volumes:
  #     - oracle-data:/opt/oracle/oradata
  #   ports:
  #     - "${ORACLE_PORT}:${ORACLE_PORT}"
  #   healthcheck:
  #     test: ["CMD", "healthcheck.sh"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 10
  #     start_period: 5s